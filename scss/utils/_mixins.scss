@use "functions" as *;
@use "variables" as *;
@use "sass:string";

@mixin flex-row-between($align-items: stretch) {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: $align-items;
}
@mixin flex-column-between($align-items: stretch) {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: $align-items;
}
@mixin flex-column-center($align-items: stretch) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: $align-items;
}
@mixin grid-absolute-center() {
  display: grid;
  justify-content: center;
  align-items: center;
}
@mixin border-style(
  $radius: 5,
  $border-width: 1,
  $border-color: $borders-color
) {
  border-radius: vw($radius);
  border: vw($border-width) solid $border-color;
}
@mixin transform-translate($x, $y) {
  transform: translate($x, $y);
}
@mixin positioning_absolute-center($x: -50%, $y: -50%) {
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform-translate($x, $y);
}
@mixin sizing($width: auto, $height: auto) {
  @if $width == auto {
    width: auto;
  } @else if string.index($width + "", "%") {
    width: $width;
  } @else {
    width: vw($width);
  }
  @if $height == auto {
    height: auto;
  } @else if string.index($height + "", "%") {
    height: $height;
  } @else {
    height: vh($height);
  }
}
@mixin animation-linear-infinite($name, $duration) {
  animation: $name $duration linear infinite;
}
@mixin box-shadow(
  $offset-x: 0,
  $offset-y: 0,
  $blur-radius: 0,
  $spread-radius: 0,
  $color: $rgb-animation-name
) {
  box-shadow: vw($offset-x) vh($offset-y) vw($blur-radius) vw($spread-radius)
    $color;
}
@mixin box-shadow-blur($blur-radius: 2, $color: $rgb-animation-name) {
  @include box-shadow(0, 0, $blur-radius, 0, $color);
}
@mixin show-effect($seconds) {
  opacity: $seconds;
}
